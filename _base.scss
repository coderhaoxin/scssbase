
/**
 * mixins
 */

@mixin flexbox($direction, $x, $y, $wrap) {
  display: -webkit-box;
  display: flex;

  @if $direction == row {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    flex-direction: $direction;
  } @else if $direction == row-reverse {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    flex-direction: $direction;
  } @else if $direction == column {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    flex-direction: $direction;
  } @else if $direction == column-reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    flex-direction: $direction;
  }

  @if $x == flex-start {
    -webkit-box-pack: start;
    justify-content: $x;
  } @else if $x == flex-end {
    -webkit-box-pack: end;
    justify-content: $x;
  } @else if $x == center {
    -webkit-box-pack: center;
    justify-content: $x;
  } @else if $x == space-between {
    -webkit-box-pack: justify;
    justify-content: $x;
  } @else if $x == space-around {
    justify-content: $x;
  }

  @if $y == flex-start {
    -webkit-box-align: start;
    align-items: $y;
  } @else if $y == flex-end {
    -webkit-box-align: end;
    align-items: $y;
  } @else if $y == center {
    -webkit-box-align: center;
    align-items: $y;
  } @else if $y == baseline {
    -webkit-box-align: center;
    align-items: $y;
  } @else if $y == stretch {
    -webkit-box-align: center;
    align-items: $y;
  }

  @if $wrap == wrap {
    -webkit-box-lines: multiple;
    flex-wrap: $wrap;
  } @else if $wrap == nowrap {
    -webkit-box-lines: single;
    flex-wrap: $wrap;
  }
}

@mixin flexitem($order, $grow) {
  @if $order {
    -webkit-box-ordinal-group: $order;
    order: $order;
  }

  @if $grow {
    -webkit-box-flex: $grow;
    flex-grow: $grow;
  }
}

@mixin griditem($row-start, $row-end, $column-start, $column-end) {
  @if $row-start {
    grid-row-start: $row-start;
  }
  @if $row-end {
    grid-row-end: $row-end;
  }
  @if $column-start {
    grid-column-start: $column-start;
  }
  @if $column-end {
    grid-column-end: $column-end;
  }
}

@mixin wordblock {
  word-break: break-all;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin wordline {
  word-break: keep-all;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/**
 * utils
 */

$base-font-size: 16px;

@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@function rem($px) {
  @if parseInt($px) == 0 {
    @return 0;
  }

  @return (parseInt($px) / parseInt($base-font-size)) * 1rem;
}
